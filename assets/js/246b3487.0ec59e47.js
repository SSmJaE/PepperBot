(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{165:function(e,t,r){"use strict";r.d(t,"a",(function(){return l})),r.d(t,"b",(function(){return d}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var b=a.a.createContext({}),s=function(e){var t=a.a.useContext(b),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},l=function(e){var t=s(e.components);return a.a.createElement(b.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,b=i(e,["components","mdxType","originalType","parentName"]),l=s(r),m=n,d=l["".concat(c,".").concat(m)]||l[m]||u[m]||o;return r?a.a.createElement(d,p(p({ref:t},b),{},{components:r})):a.a.createElement(d,p({ref:t},b))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,c=new Array(o);c[0]=m;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:n,c[1]=p;for(var b=2;b<o;b++)c[b]=r[b];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},85:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return p})),r.d(t,"toc",(function(){return i})),r.d(t,"default",(function(){return s}));var n=r(3),a=r(7),o=(r(0),r(165)),c={},p={unversionedId:"API/\u4e8b\u4ef6\u53c2\u6570/\u8de8\u5e73\u53f0",id:"API/\u4e8b\u4ef6\u53c2\u6570/\u8de8\u5e73\u53f0",isDocsHomePage:!1,title:"\u8de8\u5e73\u53f0",description:"group_message",source:"@site/docs/API/\u4e8b\u4ef6\u53c2\u6570/\u8de8\u5e73\u53f0.md",slug:"/API/\u4e8b\u4ef6\u53c2\u6570/\u8de8\u5e73\u53f0",permalink:"/PepperBot/docs/API/\u4e8b\u4ef6\u53c2\u6570/\u8de8\u5e73\u53f0",editUrl:"https://github.com/SSmJaE/PepperBot/edit/master/docs/docs/API/\u4e8b\u4ef6\u53c2\u6570/\u8de8\u5e73\u53f0.md",version:"current",lastUpdatedBy:"EdIfiMr",lastUpdatedAt:1651605405,formattedLastUpdatedAt:"5/3/2022",sidebar:"API",previous:{title:"\u6982\u89c8",permalink:"/PepperBot/docs/API/"},next:{title:"Onebot",permalink:"/PepperBot/docs/API/\u4e8b\u4ef6\u53c2\u6570/Onebot"}},i=[{value:"group_message",id:"group_message",children:[]}],b={toc:i};function s(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},b,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"group_message"},"group_message"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:"center"},"\u53c2\u6570\u540d\u79f0"),Object(o.b)("th",{parentName:"tr",align:"center"},"\u7c7b\u578b"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"center"},"bot"),Object(o.b)("td",{parentName:"tr",align:"center"},Object(o.b)("inlineCode",{parentName:"td"},"from pepperbot.core.bot.universal import UniversalGroupBot"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"center"},"raw_event"),Object(o.b)("td",{parentName:"tr",align:"center"},Object(o.b)("inlineCode",{parentName:"td"},"from typing import Dict"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"center"},"chain"),Object(o.b)("td",{parentName:"tr",align:"center"},Object(o.b)("inlineCode",{parentName:"td"},"from pepperbot.core.message.chain import MessageChain"))))),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-py"},"from pepperbot.core.bot.universal import UniversalGroupBot\nfrom typing import Dict\nfrom pepperbot.core.message.chain import MessageChain\n\n\nclass MyHandler:\n    async def group_message(\n        bot: UniversalGroupBot,\n        raw_event: Dict,\n        chain: MessageChain,\n    ):\n        pass\n")))}s.isMDXComponent=!0}}]);